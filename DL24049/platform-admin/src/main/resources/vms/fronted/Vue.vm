<template>
  <el-form class="demo-form-inline">
#set($queryNum = 1)
#foreach($tableStructureInfo in $tableStructureInfoList)
  #if($tableStructureInfo.pageQuery)
    #if($queryNum % 3 == 1)
    <el-row style="padding: 20px 0px 0px 20px">
    #end
      <el-col :span="8">
        <el-form-item label="${tableStructureInfo.fieldComment}">
          #if($tableStructureInfo.dictCode)
            <el-select
              v-model="query.${tableStructureInfo.fieldCamelName}"
              collapse-tags
              collapse-tags-tooltip
              :max-collapse-tags="5"
              placeholder="选择${tableStructureInfo.fieldComment}"
              clearable
            >
              <el-option
                v-for="item in ${tableStructureInfo.dictCalmName}Options"
                :key="item.itemValue"
                :label="item.itemName"
                :value="item.itemValue"
              />
            </el-select>
          #else
            <el-input placeholder="${tableStructureInfo.fieldComment}" v-model="query.${tableStructureInfo.fieldCamelName}" clearable />
          #end
        </el-form-item>
      </el-col>
    #if($queryNum % 3 == 0)
    </el-row>
    #end
    #set($queryNum = $queryNum+1)
  #end
#end
#if($queryNum!=1 || $queryNum % 3 !=0)
    </el-row>
#end
    <el-row style="padding: 20px 0px 0px 20px">
      <el-col :span="8">
        <el-form-item>
          <el-button type="primary" size="small" @click="onQuery">查询</el-button>
          <el-button type="success" size="small" @click="onQueryReset">重置</el-button>
          <el-button type="warning" size="small" @click="handleAdd">新增</el-button>
        </el-form-item>
      </el-col>
    </el-row>
  </el-form>
  <el-row>
    <el-table :data="tableData" border  style="width: 100%">
#foreach($tableStructureInfo in $tableStructureInfoList)
  #if($tableStructureInfo.pageColumn)
    #if($tableStructureInfo.dictCode)
      <el-table-column prop="${tableStructureInfo.fieldCamelName}" label="${tableStructureInfo.fieldComment}"  >
        <template #default="scope">
          <el-tag >{{getDictItemNameByValue(${tableStructureInfo.dictCalmName}Options, scope.row.${tableStructureInfo.fieldCamelName} )}}</el-tag>
        </template>
      </el-table-column>
    #else
      <el-table-column prop="${tableStructureInfo.fieldCamelName}" label="${tableStructureInfo.fieldComment}"  />
    #end
  #end
#end
      <el-table-column fixed="right" label="操作" width="250px">
        <template #default="scope">
          <el-button type="primary" size="small" @click="handleModify(scope.row)">修改</el-button>
          <el-button type="danger" size="small" @click="handleDelete(scope.row)">删除</el-button>
        </template>
      </el-table-column>
    </el-table>
  </el-row>
  <el-row style="padding: 10px;float: right;">
    <el-pagination background layout="prev, pager, next" :total="pageTotal" small @current-change="handleCurrentChange"/>
  </el-row>

  <el-dialog  v-model="dialogFormVisible" :title="formTitle">
    <el-form :model="form" :rules="formRules" ref="formRef">
 #foreach($tableStructureInfo in $tableStructureInfoList)
   #if($tableStructureInfo.fieldName != "create_time" && $tableStructureInfo.fieldName != "modify_time"
      && $tableStructureInfo.fieldName != "creator" && $tableStructureInfo.fieldName != "modifier" && $tableStructureInfo.fieldName != "id")
     #if($tableStructureInfo.fieldType == 'Date')
       <el-form-item label="${tableStructureInfo.fieldComment}：" :label-width="formLabelWidth" prop="${tableStructureInfo.fieldCamelName}">
         <el-date-picker
                 v-model="form.${tableStructureInfo.fieldCamelName}"
                 type="date"
                 format="YYYY-MM-DD"
                 value-format="YYYY-MM-DD"
                 placeholder="请选择${tableStructureInfo.fieldComment}"
         />
       </el-form-item>
     #elseif($tableStructureInfo.dictCode)
       <el-form-item label="${tableStructureInfo.fieldComment}：" :label-width="formLabelWidth" prop="${tableStructureInfo.fieldCamelName}">
         <el-select
            v-model="form.${tableStructureInfo.fieldCamelName}"
            collapse-tags
            collapse-tags-tooltip
            :max-collapse-tags="5"
            placeholder="选择${tableStructureInfo.fieldComment}"
         >
           <el-option
             v-for="item in ${tableStructureInfo.dictCalmName}Options"
             :key="item.itemValue"
             :label="item.itemName"
             :value="item.itemValue"
           />
         </el-select>
       </el-form-item>
     #else
       <el-form-item label="${tableStructureInfo.fieldComment}：" :label-width="formLabelWidth" prop="${tableStructureInfo.fieldCamelName}">
         <el-input v-model="form.${tableStructureInfo.fieldCamelName}" />
       </el-form-item>
     #end
   #end
 #end
    </el-form>
    <template #footer>
      <span class="dialog-footer">
        <el-button @click="handleCancle()">取消</el-button>
        <el-button type="primary" @click="handleSubmit()">提交</el-button>
      </span>
    </template>
  </el-dialog>
</template>

<script setup>
import { page${fileName}, add${fileName}, modify${fileName}, delete${fileName} } from '@/api/${variableName}'
import { onMounted, reactive, ref } from 'vue'
import { ElMessage, ElMessageBox } from 'element-plus'
#if($dictMap.size() > 0)
import { getByDictCode, getDictItemNameByValue } from '@/utils/system'
#end
#foreach($item in $dictMap.entrySet())
const ${item.value}Options = ref(null)
#end

const form = reactive({
#foreach($tableStructureInfo in $tableStructureInfoList)
  #if($tableStructureInfo.fieldName != "create_time" && $tableStructureInfo.fieldName != "modify_time" && $tableStructureInfo.fieldName != "creator" && $tableStructureInfo.fieldName != "modifier" )
  ${tableStructureInfo.fieldCamelName}: '',
  #end
#end
})
const backupQueryData = JSON.parse(JSON.stringify(form))
const query = reactive({
#foreach($tableStructureInfo in $tableStructureInfoList)
  #if($tableStructureInfo.pageQuery)
  ${tableStructureInfo.fieldCamelName}: '',
  #end
#end
})
const backupData = JSON.parse(JSON.stringify(form))
const dialogFormVisible = ref(false)
const formTitle = ref(null)
const formLabelWidth = '140px'
const pageSize = ref(10)
const pageTotal = ref(0)
const tableData = ref([])
const formRef = ref(null)
const formRules = reactive({
#foreach($tableStructureInfo in $tableStructureInfoList)
  #if($tableStructureInfo.fieldRequired && ${tableStructureInfo.filedKey}!="PRI")
  ${tableStructureInfo.fieldCamelName}: [
    { required: true, message: '请输入${tableStructureInfo.fieldComment}', trigger: 'blur' }
  ],
  #end
#end
})

const loadData = async (current) => {
  const queryData = {
#foreach($tableStructureInfo in $tableStructureInfoList)
  #if($tableStructureInfo.pageQuery)
      ${tableStructureInfo.fieldCamelName}: query.${tableStructureInfo.fieldCamelName},
  #end
#end
  }
  page${fileName}(pageSize.value, current, queryData, data => {
    tableData.value = data.records
    pageTotal.value = data.total
  })
  #if($dictMap.size() > 0)
    #foreach($item in $dictMap.entrySet())
  ${item.value}Options.value = await getByDictCode('${item.key}')
    #end
  #end
}

onMounted(() => {
  loadData(1)
})
const onQuery = () => {
  loadData(1)
}
const onQueryReset = () => {
  Object.assign(query, backupQueryData)
  loadData(1)
}
const handleAdd = () => {
  resetForm()
  dialogFormVisible.value = true
  formTitle.value = '新增'
  form.actionType = 'add'
}
const handleModify = (row) => {
  resetForm()
  dialogFormVisible.value = true
  formTitle.value = '修改'
  form.actionType = 'edit'
  form.id = row.id
  Object.assign(form, row)
}
const handleDelete = (row) => {
  ElMessageBox.confirm(
    '是否删除当前数据：【' + row.name + '】?',
    '警告',
    {
      confirmButtonText: '确认',
      cancelButtonText: '取消',
      type: 'warning'
    }
  ).then(() => {
    delete${fileName}(row.id, data => {
      ElMessage.success('删除成功')
      loadData(1)
    })
  })
}
const handleCurrentChange = (number) => {
  loadData(number)
}

const handleSubmit = () => {
  formRef.value.validate(valid => {
    if (!valid) {
      return
    }
    let promise = null
    if (form.actionType === 'add') {
      promise = add${fileName}(form)
    } else {
      promise = modify${fileName}(form.id, form)
    }

    promise.then(data => {
      if (data.code === 0) {
        ElMessage.success('操作成功')
        loadData()
        handleCancle()
      } else {
        ElMessage.error(data.msg)
      }
    })
  })
}

const handleCancle = () => {
  resetForm()
  dialogFormVisible.value = false
}
const resetForm = () => {
  if (formRef.value !== null) {
    formRef.value.resetFields()
    Object.assign(form, backupData)
  }
}
</script>
<style scoped>

.demo-form-inline .el-input {
  --el-input-width: 220px;
}

</style>
